# 数据库访问配置
# 主数据源，默认的
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      #url: jdbc:mysql://127.0.0.1:3306/activiti?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&tinyInt1isBit=false
      url: jdbc:mysql://localhost:3306/activiti?useUnicode=true&characterEncoding=utf8&nullCatalogMeansCurrent=true&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC
      username: root
      password: root
      ###########         监控   start
      # 连接池配置,配置_DruidDataSource配置
      initial-size: 10
      max-active: 150
      min-idle: 10
      max-wait: 60000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      validation-query: select 'x'
      test-on-borrow: false
      test-on-return: false
      test-while-idle: true
      time-between-eviction-runs-millis: 60000
      connectionInitSqls: set names utf8mb4;
      #是否启用StatFilter默认值true
      filter:
        stat:
          log-slow-sql:  true
          slow-sql-millis: 1000
          merge-sql: true
          db-type: mysql
          enabled: true
        wall:
          #配置wall filter
          enabled: true
          db-type: mysql
          config:
            alter-table-allow: false
            truncate-allow: false
            drop-table-allow: false
            #是否允许非以上基本语句的其他语句，缺省关闭，通过这个选项就能够屏蔽DDL。
            none-base-statement-allow: false
            #检查UPDATE语句是否无where条件，这是有风险的，但不是SQL注入类型的风险
            update-where-none-check: true
            #SELECT ... INTO OUTFILE 是否允许，这个是mysql注入攻击的常见手段，缺省是禁止的
            select-into-outfile-allow: false
            #是否允许调用Connection.getMetadata方法，这个方法调用会暴露数据库的表信息
            metadata-allow: true
          #对被认为是攻击的SQL进行LOG.error输出
          log-violation: true
          #对被认为是攻击的SQL抛出SQLExcepton
          throw-exception: true
      web-stat-filter:
        #配置web-stat-filter
        enabled: true
        url-pattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*,swagger-ui*,doc.html,/swagger-resources*,/api-docs,/webjars/*'
        #你可以配置principalSessionName，使得druid能够知道当前的cookie的用户是谁
        principal-cookie-name: admin
        #你可以配置principalSessionName，使得druid能够知道当前的session的用户是谁
        principal-session-name: admin
        #置profileEnable能够监控单个url调用的sql列表。
        profile-enable: true
        #session统计功能
        session-stat-enable: true
        #最大session数
        session-stat-max-count: 100000
      stat-view-servlet:
        #配置StatViewServlet
        #allow: 10.10.100.203
        enabled: true
        login-username: admin
        login-password: 123456
        url-pattern: /druid/*
        reset-enable: true
      #配置Druid监控Spring包方法的调用
      aop-patterns: com.weilf.demo.*
